local Players = game:GetService("Players")
local player = Players.LocalPlayer

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "SpeedControlGui"

local container = Instance.new("Frame")
container.Size = UDim2.new(0.4, 0, 0.5, 0)
container.Position = UDim2.new(0.1, 0, 0.1, 0)
container.BackgroundTransparency = 1
container.Parent = screenGui

local draggableBar = Instance.new("Frame")
draggableBar.Size = UDim2.new(1, 0, 0.1, 0)
draggableBar.BackgroundColor3 = Color3.fromRGB(70,70,70)
draggableBar.Parent = container

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.1,0,1,0)
closeButton.Position = UDim2.new(0.9,0,0,0)
closeButton.Text = "X"
closeButton.Font = Enum.Font.FredokaOne
closeButton.TextScaled = true
closeButton.BackgroundColor3 = Color3.fromRGB(255,0,4)
closeButton.Parent = draggableBar

local background = Instance.new("Frame")
background.Size = UDim2.new(1, 0, 0.9, 0)
background.Position = UDim2.new(0, 0, 0.1, 0)
background.BackgroundColor3 = Color3.fromRGB(92, 255, 144)
background.BorderSizePixel = 2
background.BackgroundTransparency = 0.33
background.Parent = container

-- Noclip button
local noclipButton = Instance.new("TextButton")
noclipButton.Size = UDim2.new(0.4,0,0.2,0)
noclipButton.Position = UDim2.new(0.05,0,0.1,0)
noclipButton.Text = "Noclip OFF"
noclipButton.Font = Enum.Font.FredokaOne
noclipButton.TextScaled = true
noclipButton.BackgroundColor3 = Color3.fromRGB(228,255,108)
noclipButton.Parent = background

local noclip = false

local function toggleNoclip()
	local char = player.Character or player.CharacterAdded:Wait()
	for _, part in ipairs(char:GetChildren()) do
		if part:IsA("BasePart") then
			part.CanCollide = not noclip
		end
	end
	noclip = not noclip
	noclipButton.Text = noclip and "Turn Noclip ON" or "Turn Noclip OFF"
	print(noclip and "Turn Noclip ON" or "Turn Noclip OFF")
end

noclipButton.MouseButton1Click:Connect(toggleNoclip)

-- Speed boost button
local speedButton = Instance.new("TextButton")
speedButton.Size = UDim2.new(0.4,0,0.2,0)
speedButton.Position = UDim2.new(0.55,0,0.1,0)
speedButton.Text = "Increase Speed"
speedButton.Font = Enum.Font.FredokaOne
speedButton.TextScaled = true
speedButton.BackgroundColor3 = Color3.fromRGB(75,231,255)
speedButton.Parent = background

local function getHumanoid()
	local char = player.Character or player.CharacterAdded:Wait()
	return char:WaitForChild("Humanoid")
end

speedButton.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	humanoid.WalkSpeed = humanoid.WalkSpeed + 10
end)

-- Reset speed/jump button
local resetButton = Instance.new("TextButton")
resetButton.Size = UDim2.new(0.4,0,0.2,0)
resetButton.Position = UDim2.new(0.05,0,0.4,0)
resetButton.Text = "Reset Speed/Jump"
resetButton.Font = Enum.Font.FredokaOne
resetButton.TextScaled = true
resetButton.BackgroundColor3 = Color3.fromRGB(255,0,0)
resetButton.Parent = background

resetButton.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	humanoid.WalkSpeed = 16
	humanoid.JumpHeight = 7.2
end)

-- Jump Boost box
local jumpBox = Instance.new("TextBox")
jumpBox.Size = UDim2.new(0.4,0,0.2,0)
jumpBox.Position = UDim2.new(0.55,0,0.4,0)
jumpBox.Text = "Set Jump Height"
jumpBox.Font = Enum.Font.FredokaOne
jumpBox.BackgroundColor3 = Color3.fromRGB(47,85,255)
jumpBox.TextScaled = true
jumpBox.Parent = background

jumpBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local value = tonumber(jumpBox.Text)
		if value then
			local humanoid = getHumanoid()
			humanoid.JumpHeight = value
			print("Jump Height set to", value)
		end
	end
end)

-- Highlight players
local highlightButton = Instance.new("TextButton")
highlightButton.Size = UDim2.new(0.9,0,0.2,0)
highlightButton.Position = UDim2.new(0.05, 0,0.7, 0)
highlightButton.Text = "Highlight Players"
highlightButton.Font = Enum.Font.FredokaOne
highlightButton.TextScaled = true
highlightButton.BackgroundColor3 = Color3.fromRGB(210,46,255)
highlightButton.Parent = background

local highlighting = false
local highlights = {}

local function addHighlight(char)
	if not char or highlights[char] then return end
	local hl = Instance.new("Highlight", char)
	hl.FillColor = Color3.fromRGB(255,0,0)
	hl.OutlineColor = Color3.fromRGB(255,255,255)
	highlights[char] = hl
end

local function highlightAll()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= player and plr.Character then
			addHighlight(plr.Character)
			plr.CharacterAdded:Connect(function(char)
				if highlighting then
					addHighlight(char)
				end
			end)
		end
	end
end

local function clearHighlights()
	for _, hl in pairs(highlights) do
		if hl then hl:Destroy() end
	end
	highlights = {}
end

highlightButton.MouseButton1Click:Connect(function()
	if highlighting then
		clearHighlights()
		highlightButton.Text = "Highlight Players"
	else
		highlightAll()
		highlightButton.Text = "Disable Highlight"
	end
	highlighting = not highlighting
end)

-- Close button logic
local isVisible = true
closeButton.MouseButton1Click:Connect(function()
	isVisible = not isVisible
	background.Visible = isVisible
end)

-- Draggable logic
local UIS = game:GetService("UserInputService")

local function makeDraggable(dragHandle, frameToMove)
	local dragging, dragStart, startPos = false, nil, nil

	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frameToMove.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	dragHandle.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
			local delta = input.Position - dragStart
			frameToMove.Position = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
		end
	end)
end

makeDraggable(draggableBar, container)
