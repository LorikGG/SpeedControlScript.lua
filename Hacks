local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Utility function
local function getCharacter()
	return player.Character or player.CharacterAdded:Wait()
end
local function getHumanoid()
	return getCharacter():WaitForChild("Humanoid")
end
local function getHRP()
	return getCharacter():WaitForChild("HumanoidRootPart")
end

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedControlGui"
screenGui.Parent = playerGui

-- Main container frame
local container = Instance.new("Frame")
container.Size = UDim2.new(0.4, 0, 0.6, 0)
container.Position = UDim2.new(0.3, 0, 0.25, 0)
container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
container.BorderSizePixel = 2
container.Parent = screenGui

-- Draggable Bar
local draggableBar = Instance.new("Frame")
draggableBar.Size = UDim2.new(1, 0, 0.1, 0)
draggableBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
draggableBar.Parent = container

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.048, 0, 0.098, 0)
closeButton.Position = UDim2.new(0.801, 0, 0.059, 0)
closeButton.Text = "X"
closeButton.Font = Enum.Font.FredokaOne
closeButton.TextScaled = true
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
closeButton.Parent = screenGui -- outside container, always on top

-- ScrollFrame for buttons
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 0.9, 0)
scrollFrame.Position = UDim2.new(0, 0, 0.1, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 8
scrollFrame.Parent = container

local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Parent = scrollFrame
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 8)

-- Button size to keep consistent
local buttonSize = UDim2.new(0.9, 0, 0, 50)

-- Noclip Toggle
local noclip = false
local noclipButton = Instance.new("TextButton")
noclipButton.Size = buttonSize
noclipButton.Text = "Noclip OFF"
noclipButton.TextScaled = true
noclipButton.BackgroundColor3 = Color3.new(1, 0.933333, 0.184314)
noclipButton.Font = Enum.Font.FredokaOne
noclipButton.Parent = scrollFrame

local function toggleNoclip()
	local character = getCharacter()
	for _, part in ipairs(character:GetChildren()) do
		if part:IsA("BasePart") then
			part.CanCollide = noclip
			part.CanTouch = noclip
		end
	end
	noclip = not noclip
	noclipButton.Text = noclip and "Noclip ON" or "Noclip OFF"
end
noclipButton.MouseButton1Click:Connect(toggleNoclip)

-- Speed Button
local speedButton = Instance.new("TextButton")
speedButton.Size = buttonSize
speedButton.Text = "Increase Speed"
speedButton.TextScaled = true
speedButton.BackgroundColor3 = Color3.new(0.890196, 0.780392, 1)
speedButton.Font = Enum.Font.FredokaOne
speedButton.Parent = scrollFrame

speedButton.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	humanoid.WalkSpeed += 10
end)

-- Reset Speed/Jump
local resetButton = Instance.new("TextButton")
resetButton.Size = buttonSize
resetButton.Text = "Reset Speed/Jump"
resetButton.TextScaled = true
resetButton.BackgroundColor3 = Color3.new(1, 0.235294, 0.27451)
resetButton.Font = Enum.Font.FredokaOne
resetButton.Parent = scrollFrame

resetButton.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	humanoid.WalkSpeed = 16
	humanoid.JumpHeight = 7.2
end)

-- Extra HP Button
local hpButton = Instance.new("TextButton")
hpButton.Size = buttonSize
hpButton.Text = "Gain 100 HP"
hpButton.TextScaled = true
hpButton.BackgroundColor3 = Color3.new(0.0117647, 1, 0.423529)
hpButton.Font = Enum.Font.FredokaOne
hpButton.Parent = scrollFrame

hpButton.MouseButton1Click:Connect(function()
	local humanoid = getHumanoid()
	humanoid.Health = humanoid.Health + 100
end)

-- Jump Height Input
local jumpBox = Instance.new("TextBox")
jumpBox.Size = buttonSize
jumpBox.Text = "Set Jump Height"
jumpBox.TextScaled = true
jumpBox.BackgroundColor3 = Color3.new(0.32549, 0.584314, 1)
jumpBox.Font = Enum.Font.FredokaOne
jumpBox.Parent = scrollFrame

jumpBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local value = tonumber(jumpBox.Text)
		if value then
			local humanoid = getHumanoid()
			humanoid.JumpHeight = value
		end
	end
end)

-- Highlight Players
local highlighting = false
local highlights = {}

local highlightButton = Instance.new("TextButton")
highlightButton.Size = buttonSize
highlightButton.Text = "Highlight Players"
highlightButton.TextScaled = true
highlightButton.BackgroundColor3 = Color3.new(0.945098, 0.172549, 1)
highlightButton.Font = Enum.Font.FredokaOne
highlightButton.Parent = scrollFrame

local function addHighlight(character)
	if not highlights[character] then
		local hl = Instance.new("Highlight")
		hl.FillColor = Color3.fromRGB(255, 0, 0)
		hl.OutlineColor = Color3.fromRGB(255, 255, 255)
		hl.Parent = character
		highlights[character] = hl
	end
end

local function toggleHighlight()
	if highlighting then
		for _, hl in pairs(highlights) do hl:Destroy() end
		highlights = {}
		highlightButton.Text = "Highlight Players"
	else
		for _, plr in pairs(Players:GetPlayers()) do
			if plr ~= player and plr.Character then
				addHighlight(plr.Character)
				plr.CharacterAdded:Connect(addHighlight)
			end
		end
		highlightButton.Text = "Disable Highlight"
	end
	highlighting = not highlighting
end

highlightButton.MouseButton1Click:Connect(toggleHighlight)

-- Teleport Button
local TpButton = Instance.new("TextButton")
TpButton.Size = buttonSize
TpButton.BackgroundColor3 = Color3.fromRGB(255, 176, 49)
TpButton.TextScaled = true
TpButton.Text = "Teleport 20 studs forward"
TpButton.Font = Enum.Font.FredokaOne
TpButton.Parent = scrollFrame

TpButton.MouseButton1Click:Connect(function()
	print("TpButton clicked")
	local hrp = getHRP()
	local forward = hrp.CFrame.LookVector * 20
	hrp.CFrame = hrp.CFrame + forward
end)

-- Infinite Jump Button
local infiniteJumpEnabled = false
local autojump = Instance.new("TextButton")
autojump.Size = buttonSize
autojump.BackgroundColor3 = Color3.fromRGB(149, 57, 255)
autojump.TextScaled = true
autojump.Text = "Enable Infinite Jump"
autojump.Font = Enum.Font.FredokaOne
autojump.Parent = scrollFrame

local function onInput(input, gameProcessed)
	if infiniteJumpEnabled and input.KeyCode == Enum.KeyCode.Space then
		local humanoid = getHumanoid()
		humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end

autojump.MouseButton1Click:Connect(function()
	infiniteJumpEnabled = not infiniteJumpEnabled
	print("Infinite Jump toggled:", infiniteJumpEnabled)
	autojump.Text = infiniteJumpEnabled and "Disable Infinite Jump" or "Enable Infinite Jump"

	if infiniteJumpEnabled then
		UserInputService.InputBegan:Connect(onInput)
	end
end)

-- Close Button Logic: toggle container visibility (everything except closeButton)
local isVisible = true

closeButton.MouseButton1Click:Connect(function()
	isVisible = not isVisible
	container.Visible = isVisible
end)

-- Draggable Logic supporting mouse and touch input
local function makeDraggable(dragHandle, frameToMove)
	local dragging, dragStart, startPos = false, nil, nil

	dragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frameToMove.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	dragHandle.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frameToMove.Position = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
		end
	end)
end

makeDraggable(draggableBar, container)
makeDraggable(closeButton, closeButton)
